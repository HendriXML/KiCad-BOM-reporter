<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSpy v2008 sp1 (http://www.altova.com) by MW (EMBRACE) -->
<!--W3C Schema generated by XMLSpy v2008 sp1 (http://www.altova.com)-->
<xs:schema xmlns="urn:schemas-www-wisware.nl-xmlscripting-xml" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:sys="urn:schemas-www-wisware.nl-xmlscripting" xmlns:msxml="urn:schemas-www-wisware.nl-xmlscripting-msxml" targetNamespace="urn:schemas-www-wisware.nl-xmlscripting-xml" elementFormDefault="qualified">
  <xs:import namespace="urn:schemas-www-wisware.nl-xmlscripting" schemaLocation="XMLScripting.xsd"/>
  <xs:complexType name="T_DocumentCreate">
    <xs:complexContent>
      <xs:extension base="sys:T_AbstractConditionalProcessItem">
        <xs:attribute name="Identifier" type="sys:identifier" use="required"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="T_DocumentSaveToFile">
    <xs:complexContent>
      <xs:extension base="sys:T_AbstractConditionalProcessItem">
        <xs:attribute name="Document" type="sys:expression" use="required"/>
        <xs:attribute name="Filename" type="sys:expression" use="required"/>
        <xs:attribute name="Encoding" type="sys:expression" use="optional"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="T_DocumentLoadFromFile">
    <xs:complexContent>
      <xs:extension base="sys:T_AbstractConditionalProcessItem">
        <xs:attribute name="Document" type="sys:expression" use="required"/>
        <xs:attribute name="Filename" type="sys:expression" use="required"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="T_DocumentSaveToString">
    <xs:complexContent>
      <xs:extension base="sys:T_AbstractConditionalProcessItem">
        <xs:attribute name="Document" type="sys:expression" use="required"/>
        <xs:attribute name="Identifier" type="sys:identifier" use="required"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="T_DocumentCreateElement">
    <xs:complexContent>
      <xs:extension base="sys:T_AbstractConditionalProcessItem">
        <xs:attribute name="Document" type="sys:expression" use="required"/>
        <xs:attribute name="Element" type="sys:identifier" use="required"/>
        <xs:attribute name="Name" type="xs:string" use="optional"/>
        <xs:attribute name="Namespace" type="xs:string" use="optional"/>
        <xs:attribute name="NameExpression" type="sys:expression" use="optional"/>
        <xs:attribute name="NamespaceExpression" type="sys:expression" use="optional"/>
        <xs:attribute name="ParentElement" type="sys:expression" use="optional"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="T_ElementSetAttribute">
    <xs:complexContent>
      <xs:extension base="sys:T_AbstractConditionalProcessItem">
        <xs:attribute name="Element" type="sys:expression" use="required"/>
        <xs:attribute name="Value" type="sys:expression" use="required"/>
        <xs:attribute name="Name" type="xs:string" use="optional"/>
        <xs:attribute name="Namespace" type="xs:string" use="optional"/>
        <xs:attribute name="NameExpression" type="sys:expression" use="optional"/>
        <xs:attribute name="NamespaceExpression" type="sys:expression" use="optional"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="TNode.selectSingleNode">
    <xs:complexContent>
      <xs:extension base="sys:T_AbstractConditionalProcessItem">
        <xs:attribute name="Node" type="sys:expression" use="required"/>
        <xs:attribute name="ReturnNode" type="sys:identifier" use="required"/>
        <xs:attribute name="queryString" type="sys:expression" use="required"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="TDocument.setProperty">
    <xs:complexContent>
      <xs:extension base="sys:T_AbstractConditionalProcessItem">
        <xs:attribute name="Document" type="sys:expression" use="required"/>
        <xs:attribute name="Name" type="sys:expression" use="required"/>
        <xs:attribute name="Value" type="sys:expression" use="required"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="TDocument.importNode">
    <xs:complexContent>
      <xs:extension base="sys:T_AbstractConditionalProcessItem">
        <xs:attribute name="Document" type="sys:expression" use="required"/>
        <xs:attribute name="Node" type="sys:expression" use="required"/>
        <xs:attribute name="Deep" type="sys:expression" use="required"/>
        <xs:attribute name="ReturnNode" type="sys:identifier" use="required"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="TNode.appendChild">
    <xs:complexContent>
      <xs:extension base="sys:T_AbstractConditionalProcessItem">
        <xs:attribute name="Node" type="sys:expression" use="required"/>
        <xs:attribute name="ChildNode" type="sys:expression" use="required"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="TNode.setText">
    <xs:complexContent>
      <xs:extension base="sys:T_AbstractConditionalProcessItem">
        <xs:attribute name="Node" type="sys:expression" use="required"/>
        <xs:attribute name="Value" type="sys:expression" use="required"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="TNode.getText">
    <xs:complexContent>
      <xs:extension base="sys:T_AbstractConditionalProcessItem">
        <xs:attribute name="Node" type="sys:expression" use="required"/>
        <xs:attribute name="Value" type="sys:identifier" use="required"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="T_Document.StreamFromNamedPipe">
    <xs:complexContent>
      <xs:extension base="sys:T_AbstractConditionalProcessItem">
        <xs:sequence minOccurs="0" maxOccurs="unbounded">
          <xs:element ref="sys:AbstractProcessItem"/>
        </xs:sequence>
        <xs:attribute name="Document" type="sys:expression" use="required"/>
        <xs:attribute name="PipeName" type="sys:expression" use="required"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="T_Document.StreamFromPipe">
    <xs:complexContent>
      <xs:extension base="sys:T_AbstractConditionalProcessItem">
        <xs:sequence minOccurs="0" maxOccurs="unbounded">
          <xs:element ref="sys:AbstractProcessItem"/>
        </xs:sequence>
        <xs:attribute name="Document" type="sys:expression" use="required"/>
        <xs:attribute name="PipeHandle" type="sys:identifier" use="required"/>
        <xs:attribute name="PipeName" type="sys:expression" use="required"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="TXSLProcessor.Create">
    <xs:complexContent>
      <xs:extension base="sys:T_AbstractConditionalProcessItem">
        <xs:attribute name="Identifier" type="sys:identifier" use="required"/>
        <xs:attribute name="StyleSheet" type="sys:expression" use="required"/>
        <xs:attribute name="Output" type="sys:expression" use="required"/>
        <xs:attribute name="Input" type="sys:expression" use="required"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="TXSLProcessor.Transform">
    <xs:complexContent>
      <xs:extension base="sys:T_AbstractConditionalProcessItem">
        <xs:attribute name="Processor" type="sys:expression" use="required"/>
        <xs:attribute name="Result" type="sys:identifier" use="required"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="TAttribute">
    <xs:attribute name="baseName" type="sys:constexpression" use="required"/>
    <xs:attribute name="namespaceURI" type="sys:constexpression"/>
    <xs:attribute name="Node" type="sys:identifier"/>
    <xs:attribute name="Required" type="sys:constexpression"/>
  </xs:complexType>
  
  <xs:complexType name="TOnElement">
    <xs:sequence>
      <xs:element name="Attribute" type="TAttribute" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="Block" type="sys:T_Block" minOccurs="0" maxOccurs="1"/>
    </xs:sequence>
    <xs:attribute name="baseName" type="sys:constexpression" use="required"/>
    <xs:attribute name="namespaceURI" type="sys:constexpression"/>
    <xs:attribute name="Node" type="sys:identifier"/>
    <xs:attribute name="StrictAttributes" type="sys:constexpression"/>
  </xs:complexType>

  <xs:complexType name="TOnBasicNode">
    <xs:complexContent>
      <xs:extension base="sys:T_Block">
        <xs:attribute name="Node" type="sys:identifier"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="T_Node.IterateChilds">
    <xs:complexContent>
      <xs:extension base="sys:T_AbstractConditionalProcessItem">
        <xs:sequence>
          <xs:element name="OnElement" type="TOnElement" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element name="OnOtherElement" type="TOnBasicNode" minOccurs="0" maxOccurs="1"/>
          <xs:element name="OnText" type="TOnBasicNode" minOccurs="0" maxOccurs="1"/>
          <xs:element name="OnCDATA" type="TOnBasicNode" minOccurs="0" maxOccurs="1"/>
          <xs:element name="OnEntityReference" type="TOnBasicNode" minOccurs="0" maxOccurs="1"/>
          <xs:element name="OnEntity" type="TOnBasicNode" minOccurs="0" maxOccurs="1"/>
          <xs:element name="OnProcessingInstruction" type="TOnBasicNode" minOccurs="0" maxOccurs="1"/>
          <xs:element name="OnComment" type="TOnBasicNode" minOccurs="0" maxOccurs="1"/>
          <xs:element name="OnDocumentType" type="TOnBasicNode" minOccurs="0" maxOccurs="1"/>
          <xs:element name="OnNotation" type="TOnBasicNode" minOccurs="0" maxOccurs="1"/>
        </xs:sequence>
        <xs:attribute name="Node" type="sys:expression" use="required" form="unqualified"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:element name="Node.IterateChilds" type="T_Node.IterateChilds" substitutionGroup="sys:AbstractProcessItem"/>
  <xs:element name="Document.SaveToString" type="T_DocumentSaveToString" substitutionGroup="sys:AbstractProcessItem"/>
  <xs:element name="Document.Create" type="T_DocumentCreate" substitutionGroup="sys:AbstractProcessItem"/>
  <xs:element name="XSLProcessor.Create" type="TXSLProcessor.Create" substitutionGroup="sys:AbstractProcessItem"/>
  <xs:element name="XSLProcessor.Transform" type="TXSLProcessor.Transform" substitutionGroup="sys:AbstractProcessItem"/>
  <xs:element name="Document.SaveToFile" type="T_DocumentSaveToFile" substitutionGroup="sys:AbstractProcessItem"/>
  <xs:element name="Document.LoadFromFile" type="T_DocumentLoadFromFile" substitutionGroup="sys:AbstractProcessItem"/>
  <xs:element name="Document.StreamFromNamedPipe" type="T_Document.StreamFromNamedPipe" substitutionGroup="sys:AbstractProcessItem"/>
  <xs:element name="Document.StreamFromPipe" type="T_Document.StreamFromPipe" substitutionGroup="sys:AbstractProcessItem"/>
  <xs:element name="Document.CreateElement" type="T_DocumentCreateElement" substitutionGroup="sys:AbstractProcessItem"/>
  <xs:element name="Document.importNode" type="TDocument.importNode" substitutionGroup="sys:AbstractProcessItem"/>
  <xs:element name="Document.setProperty" type="TDocument.setProperty" substitutionGroup="sys:AbstractProcessItem"/>
  <xs:element name="Element.SetAttribute" type="T_ElementSetAttribute" substitutionGroup="sys:AbstractProcessItem"/>
  <xs:element name="Node.selectSingleNode" type="TNode.selectSingleNode" substitutionGroup="sys:AbstractProcessItem"/>
  <xs:element name="Node.appendChild" type="TNode.appendChild" substitutionGroup="sys:AbstractProcessItem"/>
  <xs:element name="Node.setText" type="TNode.setText" substitutionGroup="sys:AbstractProcessItem"/>
  <xs:element name="Node.getText" type="TNode.getText" substitutionGroup="sys:AbstractProcessItem"/>

</xs:schema>
