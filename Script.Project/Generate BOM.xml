<?xml version="1.0" encoding="utf-8"?>
<pkg:Program xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xmlns="urn:schemas-www-wisware.nl-xmlscripting"
            xmlns:pkg="urn:schemas-www-wisware.nl-scriptingpackages"
            xmlns:sys="urn:schemas-www-wisware.nl-xmlscripting"
            xmlns:msx="urn:schemas-www-wisware.nl-xmlscripting-xml"
            xmlns:fil="urn:schemas-www-wisware.nl-xmlscripting-filemanagement"
            xmlns:syu="urn:schemas-www-wisware.nl-xmlscripting-sysutils"
            xmlns:reg="urn:schemas-www-wisware.nl-xmlscripting-registry"
            xmlns:indx="urn:schemas-www-wisware.nl-xmlscripting-index"
            xmlns:rep="urn:schemas-www-wisware.nl-xmlscripting-report"
            xmlns:sts="urn:schemas-www-wisware.nl-xmlscripting-showstatus"
            xmlns:ado="urn:schemas-www-wisware.nl-xmlscripting-ado"
            xmlns:lil="urn:schemas-www-wisware.nl-xmlscripting-linkedlist"
            xsi:schemaLocation="urn:schemas-www-wisware.nl-scriptingpackages ../XmlSchemas.Common.XmlScript/XMLScripting.Packages.xsd">
  <pkg:ReportTargets Cached="true">
    <pkg:Target Identifier="Report" Description="BOM report"/>
    <pkg:Target Identifier="DesignatorReport" Description="Designator report"/>
    <pkg:Target Identifier="StorageLocationReport" Description="Storage location report"/>
    <pkg:Target Identifier="StockReport" Description="Partkeepr components"/>
    <pkg:Target Identifier="TaskOutput" Description="Task output"/>
    <pkg:Target Identifier="Info" Description="Info"/>
    <pkg:Target Identifier="Warnings" Description="Warnings"/>
    <pkg:Target Identifier="Errors" Description="Errors"/>
    <pkg:Target Identifier="ReportEEVBlog" Description="BOM report - EEVBlog"/>
  </pkg:ReportTargets>
  <pkg:Config xml:space="preserve">[Settings]
BomFilename=..\Resources.Project\ESeriesBOM.xml
BomCount=1
ConnectionString=Provider=MSDASQL.1;Persist Security Info=False;Data Source=PartKeepr
SymbolMappingDirectory=..\Resources.Project.ComponentMappings

[Tasks]
;None=0, ReportStorageLocations=1, ReportPartKeeprProjects=2, CreateUnmatchedParts=3, ChangeProjectParts=4, ChangePartNames = 5, ChangePartDescriptions=6
TaskKind=0
ExportProjectID=1
ExportUnmatchedComponentsStorageID=1

[Display]
HideESerieOfValue=0
HideResistorMaxAmpVolt=0
HideZenerDiodeMaxAmp=0
HideFootprint=0
MaxShowResistorVoltage=230V
;Defaults to system
;DecimalSeparator=,

[Matching]
SkipFootprint=0


[Template.Resistor]
PowerRating = 250mW
Tolerance = 2%
Technology = metal film

[Template.Resistor.Variable.THT.rem]
;PowerRating = 250mW

[Template.PolarisedCapacitor]
;Tolerance = 10%
VoltageRating = 50V
Technology = electrolytic

[Template.Capacitor]
;Tolerance = 10%
VoltageRating = 50V
Technology = ceramic

[Template.ZenderDiode]
;Tolerance = 10%
PowerRating = 1W

[Template.Fuse]
VoltageRating = 250V

  </pkg:Config>
  <Imports>
    <Import Identifier="ElectronicUtils" Filename="..\Script.Common.Electronics\ElectronicUtils.xml"/>
    <Import Identifier="ElectronicReportUtils" Filename="..\Script.Common.Electronics\ElectronicReportUtils.xml"/>
    <Import Identifier="BomStrings" Filename="..\Script.Common.Electronics\BOM strings en-GB.xml"/>
    <Import Identifier="BomClasses" Filename="..\Script.Common.Electronics\BOM classes.xml"/>
    <Import Identifier="NamedComponentClasses" Filename="..\Script.Common.Electronics\BOM NamedComponentClasses.xml"/>
    <Import Identifier="DeviceFunctions" Filename="..\Script.Common.Electronics\BOM DeviceFunctions.xml"/>
    <Import Identifier="DeviceFunctionDescription" Filename="..\Script.Common.Electronics\BOM DeviceFunctionDescription en-GB.xml"/>
    <Import Identifier="MultiFunctionComponentClasses" Filename="..\Script.Common.Electronics\BOM MultiFunctionComponentClasses.xml"/>
    <Import Identifier="IntegratedCircuitClasses" Filename="..\Script.Common.Electronics\BOM IntegratedCircuitClasses.xml"/>
    <Import Identifier="ResistorClasses" Filename="..\Script.Common.Electronics\BOM ResistorClasses.xml"/>
    <Import Identifier="CapacitorClasses" Filename="..\Script.Common.Electronics\BOM CapacitorClasses.xml"/>
    <Import Identifier="InductorClasses" Filename="..\Script.Common.Electronics\BOM InductorClasses.xml"/>
    <Import Identifier="ZenerDiodeClasses" Filename="..\Script.Common.Electronics\BOM ZenerDiodeClasses.xml"/>
    <Import Identifier="ConnectorClasses" Filename="..\Script.Common.Electronics\BOM ConnectorClasses.xml"/>
    <Import Identifier="DiodeClasses" Filename="..\Script.Common.Electronics\BOM DiodeClasses.xml"/>
    <Import Identifier="FuseClasses" Filename="..\Script.Common.Electronics\BOM FuseClasses.xml"/>
    <Import Identifier="CategoryContainer" Filename="..\Script.Common.Electronics\BOM CategoryContainer.xml"/>
    <Import Identifier="StockManager" Filename="..\Script.Common.Electronics\BOM StockManager.xml"/>
    <Import Identifier="CalculatedSpecificationsClasses" Filename="..\Script.Common.Electronics\BOM CalculatedSpecifications.xml"/>
    <Import Identifier="BillOfMaterialClass" Filename="..\Script.Common.Electronics\BOM BillOfMaterialClass.xml"/>
    <Import Identifier="PartKeeprProjectExport" Filename="..\Script.Common.Electronics\BOM PartKeeprProjectExport.xml"/>
  </Imports>
  <Uses>
    <Use Identifier="ElectronicUtils"/>
    <Use Identifier="ElectronicReportUtils"/>
    <Use Identifier="BomStrings"/>
    <Use Identifier="BomClasses"/>
    <Use Identifier="ResistorClasses"/>
    <Use Identifier="CategoryContainer"/>
    <Use Identifier="BillOfMaterialClass"/>
    <Use Identifier="StockManager"/>
    <Use Identifier="PartKeeprProjectExport"/>
    <Use Identifier="CalculatedSpecificationsClasses"/>
  </Uses>
  <Constants>
    <Constant Identifier="connsPartKeepr" Type="string" Expression="'Provider=MSDASQL.1;Persist Security Info=False;Data Source=PartKeepr;Initial Catalog=PartKeepr'"/>
    <Constant Identifier="secSettings" Type="string" Expression="'Settings'"/>
    <Constant Identifier="secDisplay" Type="string" Expression="'Display'"/>
    <Constant Identifier="secTasks" Type="string" Expression="'Tasks'"/>
    <Constant Identifier="secMatching" Type="string" Expression="'Matching'"/>
    <Constant Identifier="keyBomFilename" Type="string" Expression="'BomFilename'"/>
    <Constant Identifier="keyDecimalSeparator" Type="string" Expression="'DecimalSeparator'"/>
    <Constant Identifier="keyBomCount" Type="string" Expression="'BomCount'"/>
    <Constant Identifier="keyConnectionString" Type="string" Expression="'ConnectionString'"/>
    <Constant Identifier="keyExportProjectID" Type="string" Expression="'ExportProjectID'"/>
    <Constant Identifier="keyTaskKind" Type="string" Expression="'TaskKind'"/>
    <Constant Identifier="keyExportUnmatchedComponentsStorageID" Type="string" Expression="'ExportUnmatchedComponentsStorageID'"/>
    <Constant Identifier="keyHideESerieOfValue" Type="string" Expression="'HideESerieOfValue'"/>
    <Constant Identifier="keyHideResistorMaxAmpVolt" Type="string" Expression="'HideResistorMaxAmpVolt'"/>
    <Constant Identifier="keyHideZenerDiodeMaxAmp" Type="string" Expression="'HideZenerDiodeMaxAmp'"/>
    <Constant Identifier="keyHideFootprint" Type="string" Expression="'HideFootprint'"/>
    <Constant Identifier="keyMaxShowResistorVoltage" Type="string" Expression="'MaxShowResistorVoltage'"/>
    <Constant Identifier="keySymbolMappingDirectory" Type="string" Expression="'SymbolMappingDirectory'"/>
    <Constant Identifier="keySkipFootprint" Type="string" Expression="'SkipFootprint'"/>
  </Constants>
  <Variables>
    <Variable Identifier="ConnectionString" Type="string" Init="connsPartKeepr"/>
    <Variable Identifier="BomFilename" Type="string" Init="''"/>
    <Variable Identifier="ScriptPath" Type="string" Init="''"/>
    <Variable Identifier="SymbolMappingDirectory" Type="string" Init="'..\Resources.Project.ComponentMappings'"/>
    <Variable Identifier="BomCountS" Type="string" Init="''"/>
    <Variable Identifier="BomCount" Type="Integer" Init="1"/>
    <Variable Identifier="BillOfMaterials" Type="TBillOfMaterials" Init="TBillOfMaterials.Create"/>
    <Variable Identifier="CalculatedSpecifications" Type="TCalculatedSpecifications" Init="ObjNil"/>
    <Variable Identifier="globStockManager" Type="TStockManager" Init="TStockManager.Create"/>
    <Variable Identifier="DBConnection" Type="Connection"/>
    <Variable Identifier="TaskKind" Type="TPartKeeprTask" Init="TPartKeeprTask.None"/>
  </Variables>
  <Block>
    <Variable Identifier="StartTime" Type="Int64" Init="QueryPerformanceCounter" />

    <rep:Reporter.DefaultTarget Identifier="Info"/>
    <rep:Reporter.Information Text="Format('Number of component kinds: %d', TComponentKind.High + 1)" Condition="IsVerbose"/>
    <Execute Statement="DecimalSeparator:= ConfigInifile.ReadString(secDisplay, keyDecimalSeparator, DecimalSeparator)"/>
    <Execute Statement="HideESerieOfValue:= ConfigInifile.ReadBool(secDisplay, keyHideESerieOfValue, HideESerieOfValue)"/>
    <Execute Statement="HideResistorMaxAmpVolt:= ConfigInifile.ReadBool(secDisplay, keyHideResistorMaxAmpVolt, HideESerieOfValue)"/>
    <Execute Statement="HideZenerDiodeMaxAmp:= ConfigInifile.ReadBool(secDisplay, keyHideZenerDiodeMaxAmp, HideESerieOfValue)"/>
    <Execute Statement="HideFootprint:= ConfigInifile.ReadBool(secDisplay, keyHideFootprint, HideFootprint)"/>

    <Execute Statement="SkipFootprintMatching:= ConfigInifile.ReadBool(secMatching, keySkipFootprint, SkipFootprintMatching)"/>

    <Variable Identifier="MaxShowResistorVoltageS" Type="string" Init="ConfigInifile.ReadString(secDisplay, keyMaxShowResistorVoltage, ResistorMaxVoltConv.IntValueToStr(MaxShowResistorVoltage, True))"/>
    <Raise Expression="Exception.Create('Invalid voltage: ' + MaxShowResistorVoltageS)" Condition="not ResistorMaxVoltConv.StrToIntValue(MaxShowResistorVoltageS, MaxShowResistorVoltage)"/>
    <Execute Statement="ConnectionString:= ConfigInifile.ReadString(secSettings, keyConnectionString, ConnectionString)"/>
    <Execute Statement="TaskKind:= ConfigInifile.ReadInteger(secTasks, keyTaskKind, TaskKind)"/>
    <ConditionalBlock Expression="not CommandlineVariables.GetValue(keyBomFilename, BomFilename)">
      <Execute Statement="BomFilename:= ConfigInifile.ReadString(secSettings, keyBomFilename, BomFilename)"/>
    </ConditionalBlock>
    <Choose>
      <When Expression="CommandlineVariables.GetValue(keyBomCount, BomCountS)" >
        <Execute Statement="BillOfMaterials.BomCount:= StrToInt(BomCountS)"/>
      </When>
      <Otherwise>
        <Execute Statement="BillOfMaterials.BomCount:= ConfigInifile.ReadInteger(secSettings, keyBomCount, BomCount)"/>
      </Otherwise>
    </Choose>
    <Execute Statement="ScriptPath:= ExtractFilePath(ScriptFilename)"/>
    <Execute Statement="SymbolMappingDirectory:= GetFilenameFromBase(ScriptPath, ConfigInifile.ReadString(secSettings, keySymbolMappingDirectory, SymbolMappingDirectory))"/>
    <Execute Statement="LoadSymbolMappings(SymbolMappingDirectory)"/>

    <Execute Statement="BomFilename:= GetFilenameFromBase(ScriptPath, BomFilename)"/>
    <sts:ShowStatus.Information Text="sTemplatesFromIniFile"/>
    <Execute Statement="BillOfMaterials.LoadTemplatesFromIniFile(ConfigInifile)"/>

    <sts:ShowStatus.Information Text="sProcessingBOMFile"/>
    <Execute Statement="BillOfMaterials.LoadFromFile(BomFilename)"/>


    <sts:ShowStatus.Information Text="sConsolidatingSchema"/>
    <Execute Statement="BillOfMaterials.ConsolidateSpecifications"/>
    <Execute Statement="BillOfMaterials.FinalizeSchemaComponents"/>

    <ado:Connection.OpenBlock ConnectionString="ConnectionString" Connection="DBConnection">
      <sts:ShowStatus.Information Text="sReadingKnownUnits"/>
      <Execute Statement="ReadKnownUnits(DBConnection)"/>

      <!--<sts:ShowStatus.Information Text="sReadingKnownFootPrints"/>
      <Execute Statement="ReadKnownFootPrints(DBConnection)"/>-->
      
      <sts:ShowStatus.Information Text="sReadingStock"/>
      <Execute Statement="globStockManager.LoadFromDB(DBConnection)"/>
      
      <sts:ShowStatus.Information Text="sConsolidatingStock"/>
      <Execute Statement="globStockManager.ConsolidateSpecifications"/>

      <sts:ShowStatus.Information Text="sMatchComponents"/>
      <Execute Statement="BillOfMaterials.AssignStockComponents(globStockManager)"/>

      <sts:ShowStatus.Information Text="sReportBOM"/>
      <rep:Reporter.DefaultTarget Identifier="Report"/>
      <Execute Statement="BillOfMaterials.Report"/>

      <rep:Reporter.DefaultTarget Identifier="StockReport"/>
      <sts:ShowStatus.Information Text="sReportStock"/>
      <Execute Statement="globStockManager.Report"/>
      <rep:Reporter.DefaultTarget Identifier="Info"/>
      <Variable Identifier="CalculatedSpecificationsFilename" Type="string" Init="ChangeFileExt(BomFilename, '-Calculated.xml')"/>
      <Block Condition="FileExists(CalculatedSpecificationsFilename)">
        <Execute Statement="CalculatedSpecifications:= TCalculatedSpecifications.Create"/>
        <Execute Statement="CalculatedSpecifications.LoadFromFile(CalculatedSpecificationsFilename)"/>
      </Block>
      <rep:Reporter.DefaultTarget Identifier="DesignatorReport"/>
      <sts:ShowStatus.Information Text="sReportDesignators"/>
      <Execute Statement="BillOfMaterials.ReportDesignators(CalculatedSpecifications)"/>

      <rep:Reporter.DefaultTarget Identifier="StorageLocationReport"/>
      <sts:ShowStatus.Information Text="sReportStorageLocations"/>
      <Execute Statement="BillOfMaterials.ReportOrderPicking(globStockManager)"/>


      <Variable Identifier="EndTime" Type="Int64" Init="QueryPerformanceCounter" />
      <rep:Reporter.Information Text="Format(sTimeMeasure, (EndTime-StartTime)/QueryPerformanceFrequency)" Target="Info"/>

      <rep:Reporter.DefaultTarget Identifier="Info"/>
      <Case Expression="TaskKind">
        <On Select="TPartKeeprTask.ReportStorageLocations">
          <sts:ShowStatus.Information Text="sReportingStorageLocations"/>
          <Execute Statement="ReportStorageLocations(DBConnection)"/>
        </On>
        <On Select="TPartKeeprTask.ReportPartKeeprProjects">
          <sts:ShowStatus.Information Text="sReportingProjects"/>
          <Execute Statement="ReportPartKeeprProjects(DBConnection)"/>
        </On>
        <On Select="TPartKeeprTask.ChangeProjectParts, TPartKeeprTask.CreateUnmatchedParts">
          <Execute Statement="UnmatchedComponentsStorageID:= ConfigInifile.ReadInteger(secTasks, keyExportUnmatchedComponentsStorageID, -1)"/>
          <sts:ShowStatus.Information Text="sProcessingUnmatchedComponents"/>
          <Execute Statement="MatchUnmatchedSchemaComponentsToCategories(DBConnection, BillOfMaterials, globStockManager, TaskKind=TPartKeeprTask.CreateUnmatchedParts)" Condition="UnmatchedComponentsStorageID &lt;&gt; -1"/>
          <ExitOnAbortRequest/>
        </On>
        <On Select="TPartKeeprTask.ChangePartNames">
          <sts:ShowStatus.Information Text="sChangePartNames"/>
          <Execute Statement="ChangePartDescriptions(DBConnection, globStockManager, TComponentProperty.Name)"/>
        </On>
        <On Select="TPartKeeprTask.ChangePartDescriptions">
          <sts:ShowStatus.Information Text="sChangePartDescriptions"/>
          <Execute Statement="ChangePartDescriptions(DBConnection, globStockManager, TComponentProperty.Description)"/>
        </On>
      </Case>

      <Case Expression="TaskKind">
        <On Select="TPartKeeprTask.ChangeProjectParts">
          <Variable Identifier="ExportProjectID" Type="Integer" Init="ConfigInifile.ReadInteger(secTasks, keyExportProjectID, -1)"/>
          <sts:ShowStatus.Information Text="sProcessingProjectComponents"/>
          <Execute Statement="ExportToPartKeeprProject(DBConnection, BillOfMaterials, ExportProjectID, BomCount)" Condition="ExportProjectID &lt;&gt; -1"/>
          <ExitOnAbortRequest/>
        </On>
      </Case>

    </ado:Connection.OpenBlock>
    <sts:ShowStatus.Information Text="''"/>

    <Variable Identifier="ReportIterator"/>
    <rep:Reporter.GetIterator Target="Report" Iterator="ReportIterator"/>
    <rep:Reporter.DefaultTarget Identifier="ReportEEVBlog"/>
    <Execute Statement="ReportAsEEVBlog(ReportIterator)"/>
  </Block>
</pkg:Program>